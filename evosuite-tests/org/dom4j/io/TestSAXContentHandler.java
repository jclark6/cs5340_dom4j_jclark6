/*
 * This file was automatically generated by EvoSuite
 */

package org.dom4j.io;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.io.ElementStack;
import org.dom4j.io.SAXContentHandler;
import org.dom4j.tree.DefaultDocument;
import org.dom4j.util.IndexedElement;
import org.junit.BeforeClass;
import org.xml.sax.Attributes;
import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.Locator;
import org.xml.sax.SAXException;
import org.xml.sax.SAXParseException;
import org.xml.sax.ext.Attributes2Impl;
import org.xml.sax.ext.Locator2Impl;
import org.xml.sax.helpers.AttributesImpl;

@RunWith(EvoSuiteRunner.class)
public class TestSAXContentHandler {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) null);
      sAXContentHandler0.notationDecl("HxtiMZw~EiRF|A2AQ#{", "HxtiMZw~EiRF|A2AQ#{", "HxtiMZw~EiRF|A2AQ#{");
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test1()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      InputSource inputSource0 = new InputSource();
      sAXContentHandler0.setInputSource(inputSource0);
      sAXContentHandler0.processingInstruction("w8Z!", "w8Z!");
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test2()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.setElementStack((ElementStack) null);
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test3()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      // Undeclared exception!
      try {
        sAXContentHandler0.error((SAXParseException) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.unparsedEntityDecl("w8Z!", "w8Z!", "w8Z!", "w8Z!");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test5()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      // Undeclared exception!
      try {
        sAXContentHandler0.endCDATA();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      Locator2Impl locator2Impl0 = new Locator2Impl();
      sAXContentHandler0.setDocumentLocator((Locator) locator2Impl0);
      DefaultDocument defaultDocument0 = (DefaultDocument)sAXContentHandler0.createDocument();
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertNotNull(defaultDocument0);
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test7()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      
      sAXContentHandler0.setMergeAdjacentText(true);
      sAXContentHandler0.startDocument();
      sAXContentHandler0.startDocument();
      assertEquals(true, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test8()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      boolean boolean0 = sAXContentHandler0.isIncludeInternalDTDDeclarations();
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, boolean0);
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test9()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      
      sAXContentHandler0.setStripWhitespaceText(true);
      // Undeclared exception!
      try {
        sAXContentHandler0.completeCurrentTextNode();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test10()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      boolean boolean0 = sAXContentHandler0.isMergeAdjacentText();
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.getEntityResolver();
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test12()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      boolean boolean0 = sAXContentHandler0.isIncludeExternalDTDDeclarations();
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, boolean0);
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test13()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.warning((SAXParseException) null);
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test14()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.getInputSource();
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test15()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      
      sAXContentHandler0.setIgnoreComments(true);
      char[] charArray0 = new char[1];
      sAXContentHandler0.comment(charArray0, 1, 0);
      assertEquals(true, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test16()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      boolean boolean0 = sAXContentHandler0.isIgnoreComments();
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, boolean0);
  }

  @Test
  public void test17()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      
      sAXContentHandler0.setIncludeExternalDTDDeclarations(true);
      sAXContentHandler0.elementDecl("", "");
      assertEquals(true, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test18()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.endDocument();
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test19()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.setEntityResolver((EntityResolver) sAXContentHandler0);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test20()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      boolean boolean0 = sAXContentHandler0.isStripWhitespaceText();
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, boolean0);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test21()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      // Undeclared exception!
      try {
        sAXContentHandler0.fatalError((SAXParseException) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test22()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.endPrefixMapping("<r");
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test23()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startPrefixMapping("w8Z!", "w8Z!");
      QName qName0 = QName.get("w8Z!", (Namespace) null, "w8Z!");
      IndexedElement indexedElement0 = new IndexedElement(qName0);
      sAXContentHandler0.addDeclaredNamespaces((Element) indexedElement0);
      assertEquals(false, indexedElement0.isTextOnly());
      assertEquals(1, indexedElement0.nodeCount());
  }

  @Test
  public void test24()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      
      sAXContentHandler0.setMergeAdjacentText(true);
      sAXContentHandler0.processingInstruction(" PUBLIC ", "comment()");
      assertEquals(true, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test25()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXContentHandler0.startElement(".hQ,v#I|0^$", ".hQ,v#I|0^$", ".hQ,v#I|0^$", (Attributes) attributes2Impl0);
      sAXContentHandler0.processingInstruction(".hQ,v#I|0^$", ".hQ,v#I|0^$");
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test26()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.startDocument();
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test27()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      
      sAXContentHandler0.setMergeAdjacentText(true);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      sAXContentHandler0.startElement("QHK<fVPvnQ{-R+", "QHK<fVPvnQ{-R+", "QHK<fVPvnQ{-R+", (Attributes) attributesImpl0);
      sAXContentHandler0.startCDATA();
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try {
        sAXContentHandler0.characters(charArray0, (int) '\u0000', (int) '9');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 57
         */
      }
  }

  @Test
  public void test28()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      sAXContentHandler0.startElement("QHK<fVPvnQ{-R+", "QHK<fVPvnQ{-R+", "QHK<fVPvnQ{-R+", (Attributes) attributesImpl0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXContentHandler0.startElement("QHK<fVPvnQ{-R+", "QHK<fVPvnQ{-R+", "QHK<fVPvnQ{-R+", (Attributes) attributes2Impl0);
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test29()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.endElement("HJ,+dC&/S(N/x", "HJ,+dC&/S(N/x", "HJ,+dC&/S(N/x");
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test30()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      
      sAXContentHandler0.setMergeAdjacentText(true);
      sAXContentHandler0.endElement(" PUBLIC ", " PUBLIC ", " PUBLIC ");
      assertEquals(true, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test31()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      char[] charArray0 = new char[3];
      sAXContentHandler0.characters(charArray0, (int) '\u0000', (int) '9');
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test32()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      char[] charArray0 = new char[7];
      sAXContentHandler0.characters(charArray0, (int) 'E', 0);
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test33()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      sAXContentHandler0.startElement("QHK<fVPvnQ{-R+", "QHK<fVPvnQ{-R+", "QHK<fVPvnQ{-R+", (Attributes) attributesImpl0);
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try {
        sAXContentHandler0.characters(charArray0, (int) '\u0000', (int) '9');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 57
         */
      }
  }

  @Test
  public void test34()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      sAXContentHandler0.startElement("g", "g", "g", (Attributes) attributesImpl0);
      sAXContentHandler0.startEntity("g");
      char[] charArray0 = new char[5];
      // Undeclared exception!
      try {
        sAXContentHandler0.characters(charArray0, 1, (int) 'X');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 89
         */
      }
  }

  @Test
  public void test35()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      AttributesImpl attributesImpl0 = new AttributesImpl();
      sAXContentHandler0.startElement("QHK<fVPvnQ{-R+", "QHK<fVPvnQ{-R+", "QHK<fVPvnQ{-R+", (Attributes) attributesImpl0);
      sAXContentHandler0.startCDATA();
      char[] charArray0 = new char[3];
      // Undeclared exception!
      try {
        sAXContentHandler0.characters(charArray0, (int) '\u0000', (int) '9');
        fail("Expecting exception: StringIndexOutOfBoundsException");
      } catch(StringIndexOutOfBoundsException e) {
        /*
         * String index out of range: 57
         */
      }
  }

  @Test
  public void test36()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      sAXContentHandler0.startElement("<zr", "<zr", "<zr", (Attributes) attributesImpl0);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      
      sAXContentHandler0.setMergeAdjacentText(true);
      char[] charArray0 = new char[11];
      // Undeclared exception!
      try {
        sAXContentHandler0.characters(charArray0, (int) 'r', (int) 'r');
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test37()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.endDTD();
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test38()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.addDTDDeclaration((Object) "Q=*DL$h");
      sAXContentHandler0.startDTD(".hQ,v#I|0^$", ".hQ,v#I|0^$", ".hQ,v#I|0^$");
      sAXContentHandler0.endDTD();
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test39()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.addExternalDTDDeclaration((Object) null);
      sAXContentHandler0.startDTD("2EJ](X$YJ`[OEw>Y", "2EJ](X$YJ`[OEw>Y", "2EJ](X$YJ`[OEw>Y");
      sAXContentHandler0.endDTD();
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test40()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.startDTD("QHK<fVPvnQ{-R+", "QHK<fVPvnQ{-R+", "QHK<fVPvnQ{-R+");
      sAXContentHandler0.startEntity("QHK<fVPvnQ{-R+");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test41()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startEntity("quot");
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test42()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.endEntity("<zr");
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test43()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.startEntity("QHK<fVPvnQ{-R+");
      sAXContentHandler0.endEntity("QHK<fVPvnQ{-R+");
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test44()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      
      sAXContentHandler0.setMergeAdjacentText(true);
      char[] charArray0 = new char[11];
      sAXContentHandler0.comment(charArray0, 1, 1);
      assertEquals(true, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test45()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startDTD("<zr", "<zr", "<zr");
      char[] charArray0 = new char[11];
      sAXContentHandler0.comment(charArray0, 1, 1);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test46()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      char[] charArray0 = new char[7];
      sAXContentHandler0.comment(charArray0, 0, 0);
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test47()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXContentHandler0.startElement("P", "P", "P", (Attributes) attributes2Impl0);
      char[] charArray0 = new char[8];
      sAXContentHandler0.comment(charArray0, 0, 1);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test48()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.elementDecl("QHK<fVPvnQ{-R+", "QHK<fVPvnQ{-R+");
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test49()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startDTD("<zr", "<zr", "<zr");
      sAXContentHandler0.elementDecl("<zr", "<zr");
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test50()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startDTD(")RJ", "bcu@8ox}b}GFt8\"}", "");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      
      sAXContentHandler0.setIncludeInternalDTDDeclarations(true);
      sAXContentHandler0.elementDecl("", "");
      assertEquals(true, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
  }

  @Test
  public void test51()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.attributeDecl("{<r%mJ=EZw", "{<r%mJ=EZw", "{<r%mJ=EZw", "{<r%mJ=EZw", "{<r%mJ=EZw");
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test52()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startDTD("<r", "<r", "<r");
      sAXContentHandler0.attributeDecl("f", "f", "f", "f", "f");
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test53()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startDTD("<r", "<r", "<r");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      
      sAXContentHandler0.setIncludeInternalDTDDeclarations(true);
      sAXContentHandler0.attributeDecl("f", "f", "f", "f", "f");
      sAXContentHandler0.internalEntityDecl("f", "f");
      assertEquals(true, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test54()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      
      sAXContentHandler0.setIncludeExternalDTDDeclarations(true);
      sAXContentHandler0.attributeDecl(")RJ", ")RJ", "", "", ")RJ");
      assertEquals(true, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test55()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      sAXContentHandler0.internalEntityDecl("lt", "lt");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test56()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startDTD("<r", "<r", "<r");
      sAXContentHandler0.internalEntityDecl("f", "f");
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test57()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startDTD("<r", "<r", "<r");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      
      sAXContentHandler0.setIncludeInternalDTDDeclarations(true);
      sAXContentHandler0.internalEntityDecl("f", "f");
      assertEquals(true, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test58()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) null);
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      
      sAXContentHandler0.setIncludeExternalDTDDeclarations(true);
      sAXContentHandler0.internalEntityDecl("", "");
      sAXContentHandler0.externalEntityDecl("HxtiMZw~EiRF|A2AQ#{", "HxtiMZw~EiRF|A2AQ#{", "HxtiMZw~EiRF|A2AQ#{");
      assertEquals(true, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test59()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.externalEntityDecl("-O?qGAbZtj", "-O?qGAbZtj", "-O?qGAbZtj");
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test60()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startDTD(".hQ,v#I|0^$", ".hQ,v#I|0^$", ".hQ,v#I|0^$");
      sAXContentHandler0.externalEntityDecl(".hQ,v#I|0^$", ".hQ,v#I|0^$", ".hQ,v#I|0^$");
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test61()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      sAXContentHandler0.startDTD(")RJ", "bcu@8ox}b}GFt8\"}", "");
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      
      sAXContentHandler0.setIncludeInternalDTDDeclarations(true);
      sAXContentHandler0.externalEntityDecl("bcu@8ox}b}GFt8\"}", "bcu@8ox}b}GFt8\"}", "");
      assertEquals(true, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test62()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) null);
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      
      sAXContentHandler0.setIncludeExternalDTDDeclarations(true);
      sAXContentHandler0.externalEntityDecl("HxtiMZw~EiRF|A2AQ#{", "HxtiMZw~EiRF|A2AQ#{", "HxtiMZw~EiRF|A2AQ#{");
      assertEquals(true, sAXContentHandler0.isIncludeExternalDTDDeclarations());
  }

  @Test
  public void test63()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      // Undeclared exception!
      try {
        sAXContentHandler0.completeCurrentTextNode();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test64()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      boolean boolean0 = sAXContentHandler0.isIgnorableEntity("amp");
      assertEquals(true, boolean0);
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
  }

  @Test
  public void test65()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      boolean boolean0 = sAXContentHandler0.isIgnorableEntity("gt");
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(true, boolean0);
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
  }

  @Test
  public void test66()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      boolean boolean0 = sAXContentHandler0.isIgnorableEntity("lt");
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(true, boolean0);
  }

  @Test
  public void test67()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = new DefaultDocumentFactory();
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler((DocumentFactory) defaultDocumentFactory0);
      Attributes2Impl attributes2Impl0 = new Attributes2Impl();
      sAXContentHandler0.addAttributes((Element) null, (Attributes) attributes2Impl0);
      assertEquals(false, sAXContentHandler0.isMergeAdjacentText());
      assertEquals(false, sAXContentHandler0.isIncludeInternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isIncludeExternalDTDDeclarations());
      assertEquals(false, sAXContentHandler0.isStripWhitespaceText());
      assertEquals(false, sAXContentHandler0.isIgnoreComments());
  }

  @Test
  public void test68()  throws Throwable  {
      SAXContentHandler sAXContentHandler0 = new SAXContentHandler();
      AttributesImpl attributesImpl0 = new AttributesImpl();
      attributesImpl0.addAttribute("-O?qGAbZtj", "-O?qGAbZtj", "-O?qGAbZtj", "-O?qGAbZtj", "-O?qGAbZtj");
      Attributes2Impl attributes2Impl0 = new Attributes2Impl((Attributes) attributesImpl0);
      // Undeclared exception!
      try {
        sAXContentHandler0.addAttributes((Element) null, (Attributes) attributes2Impl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }
}
