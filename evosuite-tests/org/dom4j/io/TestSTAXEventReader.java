/*
 * This file was automatically generated by EvoSuite
 */

package org.dom4j.io;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.CharArrayReader;
import java.io.FileDescriptor;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.Reader;
import java.io.SequenceInputStream;
import javax.xml.namespace.QName;
import javax.xml.stream.XMLStreamException;
import javax.xml.stream.events.Attribute;
import javax.xml.stream.events.Comment;
import javax.xml.stream.events.EntityReference;
import javax.xml.stream.events.Namespace;
import org.dom4j.DefaultDocumentFactory;
import org.dom4j.DocumentFactory;
import org.dom4j.Element;
import org.dom4j.dom.DOMElement;
import org.dom4j.io.STAXEventReader;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestSTAXEventReader {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      STAXEventReader sTAXEventReader0 = new STAXEventReader((DocumentFactory) defaultDocumentFactory0);
      DOMElement dOMElement0 = new DOMElement("");
      // Undeclared exception!
      try {
        sTAXEventReader0.createAttribute((Element) dOMElement0, (Attribute) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      STAXEventReader sTAXEventReader0 = new STAXEventReader();
      FileDescriptor fileDescriptor0 = FileDescriptor.out;
      FileInputStream fileInputStream0 = new FileInputStream(fileDescriptor0);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream((InputStream) fileInputStream0, (InputStream) fileInputStream0);
      try {
        sTAXEventReader0.readDocument((InputStream) sequenceInputStream0);
        fail("Expecting exception: XMLStreamException");
      } catch(XMLStreamException e) {
        /*
         * java.io.IOException: Stream Closed
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      STAXEventReader sTAXEventReader0 = new STAXEventReader();
      char[] charArray0 = new char[3];
      CharArrayReader charArrayReader0 = new CharArrayReader(charArray0);
      BufferedReader bufferedReader0 = new BufferedReader((Reader) charArrayReader0);
      try {
        sTAXEventReader0.readDocument((Reader) bufferedReader0);
        fail("Expecting exception: XMLStreamException");
      } catch(XMLStreamException e) {
        /*
         * ParseError at [row,col]:[1,1]
         * Message: Content is not allowed in prolog.
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      STAXEventReader sTAXEventReader0 = new STAXEventReader();
      QName qName0 = new QName("[_qzd");
      org.dom4j.QName qName1 = sTAXEventReader0.createQName(qName0);
      assertEquals("[_qzd", qName1.getQualifiedName());
      assertNotNull(qName1);
  }

  @Test
  public void test4()  throws Throwable  {
      STAXEventReader sTAXEventReader0 = new STAXEventReader();
      // Undeclared exception!
      try {
        sTAXEventReader0.createNamespace((Namespace) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      STAXEventReader sTAXEventReader0 = new STAXEventReader();
      // Undeclared exception!
      try {
        sTAXEventReader0.createEntity((EntityReference) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      STAXEventReader sTAXEventReader0 = new STAXEventReader((DocumentFactory) defaultDocumentFactory0);
      // Undeclared exception!
      try {
        sTAXEventReader0.createComment((Comment) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      STAXEventReader sTAXEventReader0 = new STAXEventReader((DocumentFactory) null);
      assertNotNull(sTAXEventReader0);
  }

  @Test
  public void test8()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      STAXEventReader sTAXEventReader0 = new STAXEventReader((DocumentFactory) defaultDocumentFactory0);
      sTAXEventReader0.setDocumentFactory((DocumentFactory) null);
  }

  @Test
  public void test9()  throws Throwable  {
      DefaultDocumentFactory defaultDocumentFactory0 = (DefaultDocumentFactory)DefaultDocumentFactory.getInstance();
      STAXEventReader sTAXEventReader0 = new STAXEventReader((DocumentFactory) defaultDocumentFactory0);
      sTAXEventReader0.setDocumentFactory((DocumentFactory) defaultDocumentFactory0);
  }
}
