/*
 * This file was automatically generated by EvoSuite
 */

package org.dom4j.jaxb;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.io.PipedOutputStream;
import java.io.StringWriter;
import java.io.Writer;
import javax.xml.bind.Element;
import javax.xml.bind.JAXBException;
import org.dom4j.QName;
import org.dom4j.io.OutputFormat;
import org.dom4j.jaxb.JAXBWriter;
import org.dom4j.tree.BaseElement;
import org.dom4j.util.NonLazyElement;
import org.junit.BeforeClass;
import org.xml.sax.SAXException;

@RunWith(EvoSuiteRunner.class)
public class TestJAXBWriter {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JAXBWriter jAXBWriter0 = new JAXBWriter(" [Comment: \"");
      OutputFormat outputFormat0 = jAXBWriter0.getOutputFormat();
      assertEquals(false, outputFormat0.isPadText());
  }

  @Test
  public void test1()  throws Throwable  {
      ClassLoader classLoader0 = ClassLoader.getSystemClassLoader();
      JAXBWriter jAXBWriter0 = new JAXBWriter("(<Yn'<Cf", classLoader0);
      try {
        jAXBWriter0.writeOpen((Element) null);
        fail("Expecting exception: JAXBException");
      } catch(JAXBException e) {
        /*
         * Provider com.sun.xml.internal.bind.v2.ContextFactory could not be instantiated: javax.xml.bind.JAXBException: \"(<Yn'<Cf\" doesnt contain ObjectFactory.class or jaxb.index
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      JAXBWriter jAXBWriter0 = new JAXBWriter(";].k.4:gtLw5*!%>");
      try {
        jAXBWriter0.writeClose((Element) null);
        fail("Expecting exception: JAXBException");
      } catch(JAXBException e) {
        /*
         * Provider com.sun.xml.internal.bind.v2.ContextFactory could not be instantiated: javax.xml.bind.JAXBException: \";].k.4\" doesnt contain ObjectFactory.class or jaxb.index
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      JAXBWriter jAXBWriter0 = new JAXBWriter(" [Comment: \"");
      // Undeclared exception!
      try {
        jAXBWriter0.setOutput((File) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * name can't be null
         */
      }
  }

  @Test
  public void test4()  throws Throwable  {
      JAXBWriter jAXBWriter0 = new JAXBWriter(" [Comment: \"");
      jAXBWriter0.startDocument();
  }

  @Test
  public void test5()  throws Throwable  {
      JAXBWriter jAXBWriter0 = new JAXBWriter(".{T9MU^{cg00G~jEPt=");
      try {
        jAXBWriter0.write((Element) null);
        fail("Expecting exception: JAXBException");
      } catch(JAXBException e) {
        /*
         * Provider com.sun.xml.internal.bind.v2.ContextFactory could not be instantiated: javax.xml.bind.JAXBException: \".{T9MU^{cg00G~jEPt=\" doesnt contain ObjectFactory.class or jaxb.index
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      JAXBWriter jAXBWriter0 = new JAXBWriter("");
      NonLazyElement nonLazyElement0 = new NonLazyElement((QName) null, 2030);
      // Undeclared exception!
      try {
        jAXBWriter0.writeCloseElement((org.dom4j.Element) nonLazyElement0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test7()  throws Throwable  {
      JAXBWriter jAXBWriter0 = new JAXBWriter("", (ClassLoader) null, (OutputFormat) null);
      // Undeclared exception!
      try {
        jAXBWriter0.writeOpenElement((org.dom4j.Element) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test8()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      JAXBWriter jAXBWriter0 = new JAXBWriter((String) null, outputFormat0);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      jAXBWriter0.setOutput((OutputStream) pipedOutputStream0);
  }

  @Test
  public void test9()  throws Throwable  {
      OutputFormat outputFormat0 = new OutputFormat();
      JAXBWriter jAXBWriter0 = new JAXBWriter((String) null, outputFormat0);
      StringWriter stringWriter0 = new StringWriter(1925);
      jAXBWriter0.setOutput((Writer) stringWriter0);
      assertEquals("", stringWriter0.toString());
  }

  @Test
  public void test10()  throws Throwable  {
      JAXBWriter jAXBWriter0 = new JAXBWriter(";].k.4:gtLw5*!%>");
      jAXBWriter0.endDocument();
      BaseElement baseElement0 = new BaseElement(";].k.4:gtLw5*!%>");
      jAXBWriter0.writeElement((org.dom4j.Element) baseElement0);
      assertEquals(false, baseElement0.hasContent());
  }
}
