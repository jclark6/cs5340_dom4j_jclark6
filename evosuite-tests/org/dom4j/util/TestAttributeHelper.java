/*
 * This file was automatically generated by EvoSuite
 */

package org.dom4j.util;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.dom4j.Attribute;
import org.dom4j.Element;
import org.dom4j.Namespace;
import org.dom4j.QName;
import org.dom4j.tree.FlyweightAttribute;
import org.dom4j.util.AttributeHelper;
import org.dom4j.util.NonLazyElement;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestAttributeHelper {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Namespace namespace0 = new Namespace("0-0U-)6/$x=zORe{MD", "0-0U-)6/$x=zORe{MD");
      NonLazyElement nonLazyElement0 = new NonLazyElement("0-0U-)6/$x=zORe{MD", namespace0);
      boolean boolean0 = AttributeHelper.booleanValue((Element) nonLazyElement0, (QName) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      AttributeHelper attributeHelper0 = new AttributeHelper();
      assertNotNull(attributeHelper0);
  }

  @Test
  public void test2()  throws Throwable  {
      Namespace namespace0 = new Namespace("0-0U-)6/$x=zORe{MD", "0-0U-)6/$x=zORe{MD");
      NonLazyElement nonLazyElement0 = new NonLazyElement("0-0U-)6/$x=zORe{MD", namespace0);
      boolean boolean0 = AttributeHelper.booleanValue((Element) nonLazyElement0, "0-0U-)6/$x=zORe{MD");
      assertEquals(false, boolean0);
  }

  @Test
  public void test3()  throws Throwable  {
      FlyweightAttribute flyweightAttribute0 = new FlyweightAttribute((String) null, (String) null);
      boolean boolean0 = AttributeHelper.booleanValue((Attribute) flyweightAttribute0);
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      Namespace namespace0 = new Namespace("0-0U-)6/$x=zORe{MD", "0-0U-)6/$x=zORe{MD");
      FlyweightAttribute flyweightAttribute0 = new FlyweightAttribute("0-0U-)6/$x=zORe{MD", "0-0U-)6/$x=zORe{MD", namespace0);
      boolean boolean0 = AttributeHelper.booleanValue((Attribute) flyweightAttribute0);
      assertEquals(false, boolean0);
  }
}
